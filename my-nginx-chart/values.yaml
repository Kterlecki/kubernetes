# Default values for my-nginx-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

frontend:
  replicaCount: 2
  image:
    repository: repository/name # Replace with your actual image
    pullPolicy: IfNotPresent ## check other ones 
    tag: "latest"
  service:
    type: LoadBalancer
    port: 80
    targetPort: 8080
  resources: 
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 250m
      memory: 64Mi

backend:
  replicaCount: 2
  image:
    repository: repository/name # Replace with your actual image
    pullPolicy: IfNotPresent ## check other ones 
    tag: "latest"
  service:
    type: ClusterIP  # Internal service, only accessible within cluster, Check in book if ithis is right
    port: 3001
    targetPort: 3001
  resources: 
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 250m
      memory: 64Mire




# # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
# image:
#   repository: nginxinc/nginx-unprivileged
#   # This sets the pull policy for images.
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: "1.27-alpine"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: 
  fsGroup: 101
  runAsUser: 101
  runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL


# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local



# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80


deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
  
deployment:
  progressDeadlineSeconds: 300
  minReadySeconds: 10
  revisionHistoryLimit: 5

# Additional volumes on the output Deployment definition.
volumes:
  - name: nginx-cache
    emptyDir: {}
  - name: nginx-pid
    emptyDir: {}
  - name: nginx-tmp
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: nginx-cache
    mountPath: /var/cache/nginx
  - name: nginx-pid
    mountPath: /var/run/nginx
  - name: nginx-tmp
    mountPath: /tmp

nodeSelector: {}

tolerations: []

affinity: {}
